<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>MugenMvvmToolkit</id>
    <version>6.0.0</version>
    <title>MugenMvvmToolkit</title>
    <authors>Vyacheslav Volkov</authors>
    <description>
      Mugen MVVM Toolkit makes it easier to develop cross-platform application using the Model-View-ViewModel design pattern.
      The Mugen MVVM Toolkit provides a cross-platform MVVM development framework built on top of:
      - WinForms
      - WPF
      - Silverlight 5
      - Silverlight for WP8, WP8.1
      - Xamarin.Android
      - Xamarin.iOS
      - Xamarin.Forms
      - WinRT XAML framework for Windows 8 Store apps
      The MVVM framework includes the following features that differs this project from other ones:
      - Deep integration with each platform.
      - Supports state preservation and restoration for mobile platforms.
      - Full Fragment support for Android, you do not need to worry about activity, fragments, sub-fragments or their state all this makes the framework.
      - Solves the nested user controls problem in MVVM, all view models are dynamically created by you, using the GetViewModel method and you do not need to use the ViewModelLocator.
      - Supports all kinds of navigation like modal window, page navigation, tab navigation, back stack fragment navigation for android. You can also easily add a new kind of navigation.
      - Navigation system works with view models and allows to expect the completion of the operation. You can pass any parameters between view models.
      - Good design mode support, for xaml platforms supports the creation of design view model with any constructor parameters.
      - Supports bindings on all platforms, all of the native binding features available for WPF platform available on all platforms and even more.
      - Binding supports C# language expressions like Linq, Extension methods, method call, ternary operator (?:), coalescing operator (??), etc.
      - Supports subscription to any control event.
      - Built-in support for validation.
      - You can easily write their own extensions for bindings.
      - Supports attached members (properties, events, methods), you can extend any object as you want.
      - Special editor for WinForms, you do not need to write code to create bindings.
      - Binding parser builds syntax tree that allows you to easily change or extend the bindings, without manipulation of the raw text.
      - Binding supports fluent syntax.
      - Excellent binding performance.
    </description>
    <releaseNotes>
Core:
      - Fixed 'Dynamic assemblies cannot be loaded'
      - Removed the setter from the IHasDisplayName.DisplayName property.
      - Removed the setter from the IHasOperationResult.OperationResult property.
      - Removed the EnsureNotDisposed method call in some methods.
      - Removed the IVisualStateManager interface.
      - Removed the validate state from the ITrackingCollection interface.
      - Removed ToolkitExtensions.LoadModules method.
      - Removed INavigationProviderEx interface
      - Removed the IViewModelSetting.Clone method.
      - Removed the IMvvmApplication.ViewModelSettings property.
      - Removed null-check from the IndexOf methods.
      - Removed ISerializer.AddKnownType and ISerializer.RemoveKnownType methods.
      - Removed the GridViewModel.OnSelectedItemPropertyChanged method.	  
      - Changed the ShowView method implementation.
      - Changed the default implementation of the IStateTransitionManager interface.
      - Changed the IStateTransitionManager interface.
      - Changed the IOperationCallbackManager interface.
      - Changed the behavior of the DynamicMultiViewModelPresenter class if a view model is already opened instead of adding the view model is selected.
      - Changed the behavior of the DynamicViewModelWindowPresenter class if a view model is already opened instead of showing the view model is activated.
      - Changed the behavior of the DynamicViewModelNavigationPresenter class if a view model is already opened instead of showing the view model is brought to front.
      - Changed default module priority.
      - Changed design time support
      - Renamed the AuditAction enum to the ViewModelLifecycleType enum.
      - Moved the navigation constants from the NavigationProvider class to the NavigationProviderConstants class.
      - Moved the DefaultOperationCallbackFactory.ContinueOnCapturedContextConstant constant to the OpeartionCallbackConstants.ContinueOnCapturedContext constant.
      - Reduced name of the data members.
      - Completely rewritten the SynchronizedNotifiableCollection.
      - Completely rewritten the OrderedNotifiableCollection.
      - Completely rewritten the FilterableNotifiableCollection.	  
      - Added an empty constructor for the serializable classes.      
      - Added the ViewModelConstants.Id constant that allows you to set the view model id manually.
      - Added the IOperationCallbackStateManager interface that allows to control the process of operation callback serialization.
      - Added the IViewModelProvider.GetCreatedViewModels method that returns the cached view models.
      - Added the IOperationCallbackManager.SetResult method that allows to set a result for all operations.
      - Added the ISerializer.IsSerializable method.
      - Added the IMvvmApplication.Start method.
      - Added the SerializableOperationCallbackFactory class for WPF, SL, WinForms platforms.
      - Added the support for the IReadOnlyCollection interface and the IReadOnlyList interface.
      - Added the ServiceProvider.ViewModelSettingsFactory delegate that allows to create an instance of the IViewModelSetting for the specified view model instead of IViewModelSetting.Clone method.
      - Added the RelayCommandBase.IgnoreProperties property.
      - Added the ViewMappingProvider.IsSupportedUriNavigation property.
      - Added the AsyncRelayCommand class as an alternative of the RelayCommandBase.FromAsyncHandler method.
      - Added the IBusyInfo interface that allows to control several busy messages.
      - Added the IViewModel.BusyInfo property.
      - Added MultiViewModel.CloseViewModelsOnClose property.
      - Added the IBootstrapCodeBuilder interface that allows to generate bootstrap code to reduce overhead of reflection and increase boot speed.
      - Added the INotifiableCollection.CollectionChangedUnsafe event.
      - Added InvalidateCommands, CanInvalidateCommands methods.
      - Added the IRelayCommand.IsExecuting property
      - Added parameter to control notification suspend for the AddRange method.
      - Updated the bootstrappers to work with the IMvvmApplication.Start method.
      - Updated the ExpressionReflectionManager class.

Binding:
      - Fixed exception that can be throw when using the indexer path in some cases.
      - Fixed incorrect handling of the ILambdaExpressionNode expression.
      - Fixed incorrect interpolated strings check.
      - Fixed DataContext binding.
      - Removed support for private properties and fields.
      - Removed the IDataBinding.BindingException event, instead of it used the IDataBinding.BindingUpdated event.
      - Changed the $OneTime macros implementation.
      - Changed the implementation of the binding path factory.
      - Moved the BindingErrorProviderBase.ClearErrorsConstant property to the BindingConstants.ClearErrors property.
      - Reordered parameters in the IBindingParser.Parse method.
      - Added ability to debug binding using debug tag parameter.
      - Added the HasStablePath feature for binding, it improves the performance for bindig where the type of the path is not changed depending on the data context.
      - Added the Observable feature for binding, this value specifies whether the binding should observe the binding path.
      - Added optional binding feature, optional binding does not throw an error if the path is not available.
      - Added the BindingServiceProvider.BindingExceptionHandler property that allows to handle binding exceptions.
      - Added the check for the properties on the ability to read.
      - Added the IBindingSourceAccessor.DisableEqualityChecking property that allows to disable the property check for equality.
      - Added the $binding keyword macros.
      - Added the IBindingProvider.BuildFromLambdaExpression method and IBindingProvider.BuildParameterFromLambdaExpression method instead of LambdaExpressionToBindingExpressionConverter methods.
      - Added the DisableEqualityCheckingBehavior class.
      - Added the IDataContext parameter for CreateBuildersFromString and CreateBindingsFromString methods.
      - Added support for static $$self, $$this keywords.
      - Added the IBindingProvider.CreateBindingsFromStringWithBindings method
      - Updated the WeakEventManager class.
      - Updated enum converter.
      - Optimized memory usage for WeakEventManager.
      - Optimized the BindingMemberInfo class.

Android:
      - Fixed incorrect behavior of ViewPager.SelectedItem.
      - Fixed NRE on beta android releases.
      - Fixed nested fragment restoration.
      - Removed complex binding path support instead of Drawer.IsOpened use the DrawerIsOpened.
      - Removed the ItemsSourceRecyclerAdapter.ClearDataContext property.
      - Changed the GetOrCreateMediator method from internal to public.
      - Added the IMvvmActivityMediator.ActivityResult event.
      - Added the IMvvmFragmentMediator.IsDestroyed property.
      - Added fast TextView.Text property implementation using JNI.
      - Added the PlatformExtensions.TryDisposeView property.
      - Added the SelectedItem attached property for Spinner.
      - Added support for nested ViewPager with fragments.
      - Added fragmentManager.IsDestroyed check in FinishUpdate.
      - Added the AttachedMembers.AutoCompleteTextView.FilterText attached member
      - Increased performance of ItemsSourceRecyclerAdapter.
      - Optimized the cache strategy for weak references, reduced the memory usage.
      - Optimized layout inflater.
      - Improved startup time after app restoration.
      - Changed the AndroidBootstrapperBase.EnsureInitialized method.
      - Updated ToastPresenter and SnackbarToastPresenter.
      - Updated support libraries to 23.4.0.1.

iOS:
      - Fixed constraints format.
      - Removed UITableView.CellBind, UITableView.CellStyle attached properties breaking changes.
      - Removed ITableCellTemplateSelector.GetHeight method.
      - Changed the GetOrCreateMediator method from internal to public.
      - Added the ICollectionCellTemplateSelectorSupportDequeueReusableCell.
      - Added the ITableCellTemplateSelectorSupportDequeueReusableCell interface.
      - Added the DefaultTableCellTemplateSelector

Xamarin.Forms:
      - Updated Xamarin.Forms to 2.3.1.114.
      - Updated DataBindingExtension
      - Fixed 'Can not find a Property named 'Bind' or a static method named 'GetBind' for BindableProperty 'BindProperty''

WinForms:
      - Fixed a NullReferenceException when using the ContextMenuStrip with binding.
    </releaseNotes>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <iconUrl>https://raw.githubusercontent.com/MugenMvvmToolkit/MugenMvvmToolkit/master/logo128_128.png</iconUrl>
    <projectUrl>https://github.com/MugenMvvmToolkit/MugenMvvmToolkit</projectUrl>
    <licenseUrl>http://opensource.org/licenses/MS-PL</licenseUrl>
    <tags>mugen mvvm toolkit binding wpf winforms android windows phone winrt binding cross platform ios</tags>
    <dependencies>
      <group targetFramework="wp8" />
      <group targetFramework="wp81" />      
      <group targetFramework="net45" />
      <group targetFramework="uap" />
      <group targetFramework="MonoAndroid10" />
      <group targetFramework="Xamarin.iOS10" />
      <group targetFramework="win8" />
      <group targetFramework="win81" />
      <group targetFramework="wpa81" />
      <group targetFramework="portable-net45+win8+wp8+wpa81" />
      <group targetFramework="portable-net45+win8+wpa81" />
      <group targetFramework="portable-net451+win81" />
      <group targetFramework="portable-net451+win81+wpa81" />
      <group targetFramework="portable-win81+wp81+wpa81" />
      <group targetFramework="portable-net45+sl50+win+wp80">
        <dependency id="Microsoft.Bcl" version="1.1.10" />
        <dependency id="Microsoft.Bcl.Build" version="1.0.21" />
      </group>
      <group targetFramework="net40-client">
        <dependency id="Microsoft.Bcl" version="1.1.10" />
        <dependency id="Microsoft.Bcl.Build" version="1.0.21" />
      </group>
      <group targetFramework="sl50">
        <dependency id="Microsoft.Bcl" version="1.1.10" />
        <dependency id="Microsoft.Bcl.Build" version="1.0.21" />
      </group>
      <group targetFramework="netstandard1.3">
        <dependency id="NETStandard.Library"  version="1.6.0" />
      </group>
    </dependencies>
  </metadata>
  <files>    
    <!-- CORE PCL WINRT -->
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\portable-net45+win+wpa81+wp80\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\portable-net45+win+wpa81+wp80\MugenMvvmToolkit.pdb" />

    <!-- CORE PCL SILVERLIGHT -->
    <file src="..\bin\Core\PCL_Silverlight\MugenMvvmToolkit.dll" target="lib\portable-net45+sl40+win+wp71\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_Silverlight\MugenMvvmToolkit.pdb" target="lib\portable-net45+sl40+win+wp71\MugenMvvmToolkit.pdb" />

    <!-- NET 4.0 -->
    <file src="..\bin\Core\NET4.0\MugenMvvmToolkit.dll" target="lib\net40-client\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\NET4.0\MugenMvvmToolkit.pdb" target="lib\net40-client\MugenMvvmToolkit.pdb" />

    <!-- NET 4.5 -->
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\net45\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\net45\MugenMvvmToolkit.pdb" />

    <!-- SILVERLIGHT 5 -->
    <file src="..\bin\Core\PCL_Silverlight\MugenMvvmToolkit.dll" target="lib\sl5\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_Silverlight\MugenMvvmToolkit.pdb" target="lib\sl5\MugenMvvmToolkit.pdb" />
    <file src="..\bin\Platforms\Silverlight\MugenMvvmToolkit.Silverlight.dll" target="lib\sl5\MugenMvvmToolkit.Silverlight.dll" />
    <file src="..\bin\Platforms\Silverlight\MugenMvvmToolkit.Silverlight.pdb" target="lib\sl5\MugenMvvmToolkit.Silverlight.pdb" />

    <!-- WINRT PCL -->
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\portable-win81+wpa81\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\portable-win81+wpa81\MugenMvvmToolkit.pdb" />
    <file src="..\bin\Platforms\WinRT\PCL\MugenMvvmToolkit.WinRT.dll" target="lib\portable-win81+wpa81\MugenMvvmToolkit.WinRT.dll" />
    <file src="..\bin\Platforms\WinRT\PCL\MugenMvvmToolkit.WinRT.pdb" target="lib\portable-win81+wpa81\MugenMvvmToolkit.WinRT.pdb" />

    <!-- WINRT 8.1 -->
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\win81\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\win81\MugenMvvmToolkit.pdb" />
    <file src="..\bin\Platforms\WinRT\PCL\MugenMvvmToolkit.WinRT.dll" target="lib\win81\MugenMvvmToolkit.WinRT.dll" />
    <file src="..\bin\Platforms\WinRT\PCL\MugenMvvmToolkit.WinRT.pdb" target="lib\win81\MugenMvvmToolkit.WinRT.pdb" />

    <!-- WP 8.1 SILVERLIGHT -->
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\wp81\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\wp81\MugenMvvmToolkit.pdb" />
    <file src="..\bin\Platforms\WinPhone\8.1\MugenMvvmToolkit.WinPhone.dll" target="lib\wp81\MugenMvvmToolkit.WinPhone.dll" />
    <file src="..\bin\Platforms\WinPhone\8.1\MugenMvvmToolkit.WinPhone.pdb" target="lib\wp81\MugenMvvmToolkit.WinPhone.pdb" />

    <!-- WP 8.0 -->
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\wp8\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\wp8\MugenMvvmToolkit.pdb" />
    <file src="..\bin\Platforms\WinPhone\8.0\MugenMvvmToolkit.WinPhone.dll" target="lib\wp8\MugenMvvmToolkit.WinPhone.dll" />
    <file src="..\bin\Platforms\WinPhone\8.0\MugenMvvmToolkit.WinPhone.pdb" target="lib\wp8\MugenMvvmToolkit.WinPhone.pdb" />

    <!-- Android -->
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\MonoAndroid10\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\MonoAndroid10\MugenMvvmToolkit.pdb" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.Binding.dll" target="lib\MonoAndroid10\MugenMvvmToolkit.Binding.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.Binding.pdb" target="lib\MonoAndroid10\MugenMvvmToolkit.Binding.pdb" />
    <file src="..\bin\Platforms\Android\MugenMvvmToolkit.Android.dll" target="lib\MonoAndroid10\MugenMvvmToolkit.Android.dll" />
    <file src="..\bin\Platforms\Android\MugenMvvmToolkit.Android.pdb" target="lib\MonoAndroid10\MugenMvvmToolkit.Android.pdb" />

    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.dll" target="lib\Xamarin.iOS10\MugenMvvmToolkit.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.pdb" target="lib\Xamarin.iOS10\MugenMvvmToolkit.pdb" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.Binding.dll" target="lib\Xamarin.iOS10\MugenMvvmToolkit.Binding.dll" />
    <file src="..\bin\Core\PCL_WinRT\MugenMvvmToolkit.Binding.pdb" target="lib\Xamarin.iOS10\MugenMvvmToolkit.Binding.pdb" />
    <file src="..\bin\Platforms\Touch\MugenMvvmToolkit.iOS.dll" target="lib\Xamarin.iOS10\MugenMvvmToolkit.iOS.dll" />

    <file src="TouchContent\error@2x.png" target="content\Xamarin.iOS10\Resources\error.png" />
   <!-- <file src="TouchContent\error@2x.png" target="content\Xamarin.iOS10\Resources\error@2x.png" /> 3.1 nuget bug-->
  </files>
</package>
